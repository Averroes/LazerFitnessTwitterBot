function start() {
  

  // You get your Twitter keys from dev.twitter.com

  
  var CONSUMER_KEY     = "RB9hlSIWkTD0xdjgnOTqhA";
  
  var CONSUMER_SECRET  = "ymCTSoUaEv3NUjuefUSBErKgRi90TzYGey5UaofgZI";
    


  
  initialize ( CONSUMER_KEY, CONSUMER_SECRET );   
  
  
}


function initialize (key, secret) {
  
  ScriptProperties.setProperty("TWITTER_CONSUMER_KEY",    key);
  ScriptProperties.setProperty("TWITTER_CONSUMER_SECRET", secret);
    
  var url = ScriptApp.getService().getUrl();
  
  if (url) {
    
    connectTwitter();
    
    var msg = "";
        
    msg += "Sample RSS Feeds for Twitter\n";
    msg += "============================";    
    
    
    msg += "\n\nTwitter Search for Lazer Fitness";
    msg += "\n" + url + "?action=search&q=miami+edm";


    msg += "\n\nYou should replace the value of 'q' parameter in the URLs as per requirement.";
 
    
    MailApp.sendEmail(Session.getActiveUser().getEmail(), "Twitter RSS Feeds", msg);

  }

}

function doGet(e) {
   
  var a = e.parameter.action;
  var q = e.parameter.q;
  
  var feed;  
  
  switch (a) 
  {
    case "timeline": 
      feed = "https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=" + q;
      break;
    case "search":
      feed = "https://api.twitter.com/1.1/search/tweets.json?q=" + encodeString (q);
      break;
    case "favorites":
      feed = "https://api.twitter.com/1.1/favorites/list.json?screen_name=" + q;
      break;
    case "list":
      var i = q.split("/");
      feed = "https://api.twitter.com/1.1/lists/statuses.json?slug=" + i[1] + "&owner_screen_name=" + i[0];
      break;
    default:
      feed = "https://api.twitter.com/1.1/statuses/user_timeline.json";
      break;      
  }
  
  var id = Utilities.base64Encode(feed);
  
  var cache = CacheService.getPublicCache();
  var rss   = cache.get(id);
  //this is where to put the magic:)
  if ( ( ! rss ) || ( rss == "undefined" ) ) {
    rss = JSONtoRSS ( feed, a, q );
    cache.put(id, rss, 3600);
  }
  
  return ContentService.createTextOutput(rss)
    .setMimeType(ContentService.MimeType.RSS);
}


function JSONtoRSS(json, type, key) {

  oAuth();
  
  var options =
  {
    "method": "get",
    "oAuthServiceName":"twitter",
    "oAuthUseToken":"always"
  };
    
  try {

    var result = UrlFetchApp.fetch(json, options);    

    if (result.getResponseCode() === 200) {
      
      var tweets = Utilities.jsonParse(result.getContentText());
      
      if (type == "search") 
        tweets = tweets.statuses;
      
      if (tweets) {
                
        var len = tweets.length;
        
        var rss = "";
        
        if (len) {
          
          rss  = '<?xml version="1.0"?><rss version="2.0">';
          rss += ' <channel><title>Twitter ' + type + ': ' + key + '</title>';
          rss += ' <link>' + htmlentities ( json ) + '</link>';
          rss += ' <pubDate>' + new Date() + '</pubDate>';

          for (var i=0; i<len; i++) {
            
            var sender = tweets[i].user.screen_name;
            var tweet  = htmlentities ( tweets[i].text );
            
            rss += "<item><title>" + sender + ": " + tweet + "</title>";
            rss += " <author>" + "@" + sender + "</author>";
            rss += " <pubDate>" + tweets[i].created_at + "</pubDate>";
            rss += " <guid isPermaLink='false'>" + tweets[i].id_str + "</guid>";
            rss += " <link>https://twitter.com/" + sender + "/statuses/" + tweets[i].id_str + "</link>";
            rss += " <description>" + tweet + "</description>";
            rss += "</item>";            
            
          }
          
          rss += "</channel></rss>";
          
          return rss;
          
        }
        
      }
      
    }
    
  } catch (e) {
    Logger.log(e.toString());
  }
  
}

function connectTwitter() {

  oAuth();
  
  var search = "https://api.twitter.com/1.1/application/rate_limit_status.json"; 
      
  var options =
  {
    "method": "get",
    "oAuthServiceName":"twitter",
    "oAuthUseToken":"always"
  };
  
  try {

    var result = UrlFetchApp.fetch(search, options);    
   
  } catch (e) {
    Logger.log(e.toString());
  }
}


function encodeString (q) {

  var str =  encodeURIComponent(q);
   str = str.replace(/!/g,'%21');
   str = str.replace(/\*/g,'%2A');
   str = str.replace(/\(/g,'%28');
   str = str.replace(/\)/g,'%29');
   str = str.replace(/'/g,'%27');
   return str;

}

function htmlentities(str) {

  str = str.replace(/&/g, "&amp;");
  str = str.replace(/>/g, "&gt;");
  str = str.replace(/</g, "&lt;");
  str = str.replace(/"/g, "&quot;");
  str = str.replace(/'/g, "&#039;");
  return str;

}

function oAuth() {

  var oauthConfig = UrlFetchApp.addOAuthService("twitter");
  oauthConfig.setAccessTokenUrl("https://api.twitter.com/oauth/access_token");
  oauthConfig.setRequestTokenUrl("https://api.twitter.com/oauth/request_token");
  oauthConfig.setAuthorizationUrl("https://api.twitter.com/oauth/authorize");
  oauthConfig.setConsumerKey(ScriptProperties.getProperty("TWITTER_CONSUMER_KEY"));
  oauthConfig.setConsumerSecret(ScriptProperties.getProperty("TWITTER_CONSUMER_SECRET"));
 
}